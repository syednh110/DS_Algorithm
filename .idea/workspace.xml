<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="91296402-95ff-4cf8-9251-3d375f957306" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2IImwskJj4UAWvr0oZoXtQsH8RB" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Application.AccoiliteTest.executor&quot;: &quot;Run&quot;,
    &quot;Application.Acoolite.executor&quot;: &quot;Run&quot;,
    &quot;Application.AllPermutation.executor&quot;: &quot;Run&quot;,
    &quot;Application.AllPermutationII.executor&quot;: &quot;Run&quot;,
    &quot;Application.CombinationSum.executor&quot;: &quot;Run&quot;,
    &quot;Application.CombinationSumII.executor&quot;: &quot;Run&quot;,
    &quot;Application.Combinatorial.executor&quot;: &quot;Run&quot;,
    &quot;Application.CommonElement.executor&quot;: &quot;Run&quot;,
    &quot;Application.DecodeString.executor&quot;: &quot;Run&quot;,
    &quot;Application.DivideTwoInteger.executor&quot;: &quot;Run&quot;,
    &quot;Application.Encoding.executor&quot;: &quot;Run&quot;,
    &quot;Application.FindSmallestElementInSortedRotArray.executor&quot;: &quot;Run&quot;,
    &quot;Application.FreqCount.executor&quot;: &quot;Run&quot;,
    &quot;Application.Interface1 (1).executor&quot;: &quot;Run&quot;,
    &quot;Application.Interface1 (2).executor&quot;: &quot;Run&quot;,
    &quot;Application.Interface1 (3).executor&quot;: &quot;Run&quot;,
    &quot;Application.Interface1 (4).executor&quot;: &quot;Run&quot;,
    &quot;Application.Interface1 (5).executor&quot;: &quot;Run&quot;,
    &quot;Application.Interface1.executor&quot;: &quot;Run&quot;,
    &quot;Application.LongestCommonSubsequence.executor&quot;: &quot;Run&quot;,
    &quot;Application.LongestCommonSubstring.executor&quot;: &quot;Run&quot;,
    &quot;Application.LongestPalindromicSubsequence.executor&quot;: &quot;Run&quot;,
    &quot;Application.LongestPalindromicSubstring.executor&quot;: &quot;Run&quot;,
    &quot;Application.LongestRepeatingSubsequence.executor&quot;: &quot;Run&quot;,
    &quot;Application.Main (1).executor&quot;: &quot;Run&quot;,
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;Application.Main2.executor&quot;: &quot;Run&quot;,
    &quot;Application.MinNoOfDeletionToMakePalindrome.executor&quot;: &quot;Run&quot;,
    &quot;Application.MinNoOfInsertionAndDeletionToMakeAToB.executor&quot;: &quot;Run&quot;,
    &quot;Application.MinNoOfInsertionToMakePalindrome.executor&quot;: &quot;Run&quot;,
    &quot;Application.NQueenProblem.executor&quot;: &quot;Run&quot;,
    &quot;Application.Order.executor&quot;: &quot;Run&quot;,
    &quot;Application.PalindromePartitioning.executor&quot;: &quot;Run&quot;,
    &quot;Application.PrimeFactor.executor&quot;: &quot;Run&quot;,
    &quot;Application.PrintLongestCommonSubsequence.executor&quot;: &quot;Run&quot;,
    &quot;Application.PrintLongestCommonSubstring.executor&quot;: &quot;Run&quot;,
    &quot;Application.PrintShortestCommonSuperSequence.executor&quot;: &quot;Run&quot;,
    &quot;Application.RatInAMaze.executor&quot;: &quot;Run&quot;,
    &quot;Application.ReverseStack.executor&quot;: &quot;Run&quot;,
    &quot;Application.ShortestCommonSuperSequence.executor&quot;: &quot;Run&quot;,
    &quot;Application.SortByLastName.executor&quot;: &quot;Run&quot;,
    &quot;Application.SortString.executor&quot;: &quot;Run&quot;,
    &quot;Application.StrinConvert.executor&quot;: &quot;Run&quot;,
    &quot;Application.StringLength.executor&quot;: &quot;Run&quot;,
    &quot;Application.SubsequencePatternMatching.executor&quot;: &quot;Run&quot;,
    &quot;Application.Subset1.executor&quot;: &quot;Run&quot;,
    &quot;Application.SubsetII.executor&quot;: &quot;Run&quot;,
    &quot;Application.Sudoko.executor&quot;: &quot;Run&quot;,
    &quot;Application.Test.executor&quot;: &quot;Run&quot;,
    &quot;Application.TestHashAndEqual.executor&quot;: &quot;Run&quot;,
    &quot;Application.ZeroOneKnapsack.executor&quot;: &quot;Run&quot;,
    &quot;Application.com.code.linklist.Test.executor&quot;: &quot;Run&quot;,
    &quot;Application.testFunctional (1).executor&quot;: &quot;Run&quot;,
    &quot;Application.testFunctional.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;E:/Programming/StreamsAndLambdas/java8&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;bito.co.bito.intellij.config.SettingsConfigurable&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.code.stack" />
    </key>
  </component>
  <component name="RunManager" selected="Application.CommonElement">
    <configuration name="CommonElement" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.code.interview.CommonElement" />
      <module name="DS&amp;Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.code.interview.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DecodeString" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.code.stack.DecodeString" />
      <module name="DS&amp;Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.code.stack.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DivideTwoInteger" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.code.stack.DivideTwoInteger" />
      <module name="DS&amp;Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.code.stack.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FindSmallestElementInSortedRotArray" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.code.binarysearch.FindSmallestElementInSortedRotArray" />
      <module name="DS&amp;Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.code.binarysearch.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.code.lambdasstreams.Main" />
      <module name="DS&amp;Algorithm" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.code.lambdasstreams.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.CommonElement" />
        <item itemvalue="Application.DecodeString" />
        <item itemvalue="Application.Main" />
        <item itemvalue="Application.FindSmallestElementInSortedRotArray" />
        <item itemvalue="Application.DivideTwoInteger" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="91296402-95ff-4cf8-9251-3d375f957306" name="Changes" comment="" />
      <created>1669877717419</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1669877717419</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>